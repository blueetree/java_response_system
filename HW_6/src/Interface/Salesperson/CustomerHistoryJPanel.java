/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Salesperson;

import Business.Market.MarketOffer;
import Business.SalesPerson.Order;
import Business.SalesPerson.OrderItem;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author liuch
 */
public class CustomerHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerHistoryJPanel
     */
    private JPanel userProcessContainer;
    public CustomerHistoryJPanel( ArrayList<Order> orders,JPanel userProcessContainer) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        populateTable(orders);
    }
      public String toTimeString(Date dt){
         SimpleDateFormat myFmt=new SimpleDateFormat("yyyy/MM/dd HH:mm");
         return myFmt.format(dt);
     }
     public void populateTable(ArrayList<Order> orders){
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for(Order order :orders) {
            Object row[] = new Object[4];
            row[0] = order;
            row[1] = order.getSalesmanName();
            double total=0;
                    for(OrderItem orderitem: order.getOrderItemList())
                    {
                        total=total+orderitem.getQuantity()*orderitem.getActualPrice();
                    }
            row[2]=total;
            row[3]=toTimeString(order.getOrderDate());
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OrderMap ID", "Salesman Name", "Acctual total pay", "Order time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Item ID", "From market", "Product name", "product Price", "Quantity"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton2.setText("Detail>>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jButton1)))
                        .addGap(0, 347, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButton2)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(91, 91, 91))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);


        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
  
        int selectedRow=jTable1.getSelectedRow();
     if(selectedRow<0)
     {
         JOptionPane.showMessageDialog(null,"Please select");
         return;
     }
     Order selectedOrder = (Order)jTable1.getValueAt(selectedRow,0);
     ArrayList<OrderItem> a= selectedOrder.getOrderItemList();
    populateTable2(a);



        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
public void populateTable2(ArrayList<OrderItem> a)
{
     DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
         model.setRowCount(0);
         
        for(OrderItem orderItem: a) {
           
            Object row[] = new Object[5];
            row[0] = orderItem.getOrderID();
            row[1] = orderItem.getMarketOffer().getMarket();
            row[2]= orderItem.getMarketOffer().getProduct();
            row[3]= orderItem.getActualPrice();
            row[4]= orderItem.getQuantity();
            model.addRow(row);
        }
    
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}

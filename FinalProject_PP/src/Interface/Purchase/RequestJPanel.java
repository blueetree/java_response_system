/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Purchase;

import Business.Area.Area;
import Business.District.District;
import Business.MaterialList.Item;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author huiwengan
 */
public class RequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestJPanel
     */
    JPanel purchaseContainer;
    District district;
    UserAccount useraccount;

    RequestJPanel(JPanel purchaseContainer, District district, UserAccount useraccount) {
        initComponents();
        this.purchaseContainer = purchaseContainer;
        this.district = district;
        this.useraccount = useraccount;

        populatecbxArea();
        populateRequest();
        populatecbxItem();
    }

    public void populatecbxArea() {
        cbxArea.removeAllItems();

        for (Area area : district.getAreaDirectory().getAreaList()) {
            cbxArea.addItem(String.valueOf(area));
        }
    }

    public void populatecbxItem() {
        cbxItem.removeAllItems();
        for (Area area : district.getAreaDirectory().getAreaList()) {
            for (Item item : area.getItemDirectory().getItemList()) {
                cbxItem.addItem(item.getName());

            }
        }
    }

    public void populateRequest() {
//        DefaultTableModel dtm = (DefaultTableModel) tblRequest.getModel();
//        dtm.setRowCount(0);
//
//        for (WorkRequest workrequest : district.getWorkQueue().getWorkRequestList()) {
////            if (workrequest.getSender().equals(useraccount)) {
//            Object row[] = new Object[4];
//            row[0] = workrequest;
//            row[1] = workrequest.getId();
//            row[2] = workrequest.getItem().getQuantity();
//            for (Area area : district.getAreaDirectory().getAreaList()) {///judge this request from which area
//                if (workrequest.getArea().getName().equals(area.getName())) {
//                    row[3] = area.getName();
//                }
//            }
//
//            dtm.addRow(row);
////            }
//        }
 DefaultTableModel dtm = (DefaultTableModel) tblRequest.getModel();
        dtm.setRowCount(0);
        for (WorkRequest workRequest : district.getWorkQueue().getWorkRequestList()) {
            Object row[] = new Object[3];
            row[0] = workRequest;
            row[1] = workRequest.getId();
            row[2] = workRequest.getItem().getQuantity();
//            for (Area area : district.getAreaDirectory().getAreaList()) {///judge this request from which area
//                if (workRequest.getArea().getName().equals(area.getName())) {
//                    row[3] = area.getName();
//                }
//            }
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequest = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cbxArea = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cbxItem = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));

        tblRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ID", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequest);
        if (tblRequest.getColumnModel().getColumnCount() > 0) {
            tblRequest.getColumnModel().getColumn(0).setResizable(false);
            tblRequest.getColumnModel().getColumn(1).setResizable(false);
            tblRequest.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel1.setText("ItemName");

        jLabel2.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel2.setText("Amount");

        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });

        btnSubmit.setBackground(new java.awt.Color(255, 255, 255));
        btnSubmit.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel3.setText("Request");

        cbxArea.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel4.setText("Area");

        cbxItem.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addGap(38, 38, 38))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(74, 74, 74)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cbxArea, 0, 88, Short.MAX_VALUE)
                                            .addComponent(cbxItem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSubmit))
                            .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel3)))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(cbxArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cbxItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSubmit))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAmountActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        for (Item item : district.getItemDirectory().getItemList()) {
            if (cbxItem.getSelectedItem().equals(item.getName())) {

                WorkRequest wRequest = new WorkRequest();
                wRequest.setItem(item);
                item.setQuantity(Integer.parseInt(txtAmount.getText()));
                wRequest.setSender(useraccount);
             
                for (Area area : district.getAreaDirectory().getAreaList()) {
                    if (cbxArea.getSelectedItem().equals(area.getName())) {
                        wRequest.setArea(area);

                        district.getWorkQueue().getWorkRequestList().add(wRequest);
                        JOptionPane.showMessageDialog(null, "successfully!");
                    }
                }
            }
        }
//        int quantity;
//        quantity = Integer.parseInt(txtAmount.getText());
//        Item item = (Item) cbxItem.getSelectedItem();
//        //double price = Double.parseDouble(txtPrice.getText());
//        WorkRequest wRequest = new WorkRequest();
//        wRequest.setItem(item);
//        wRequest.getItem().setQuantity(quantity);
//        wRequest.setSender(useraccount);
//        for (Area area : district.getAreaDirectory().getAreaList()) {
//            if (cbxArea.getSelectedItem().equals(area.getName())) {
//                wRequest.setArea(area);
//            }
//        }
//        district.getWorkQueue().getWorkRequestList().add(wRequest);
        //Item item = area.getItemDirectory().createItem(name, price);
        populateRequest();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = tblRequest.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first", "Warning", JOptionPane.WARNING_MESSAGE);
            populateRequest();
        } else {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int DialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete the account?", "Warning", dialogButton);
            if (DialogResult == JOptionPane.YES_OPTION) {
                WorkRequest workRequest = (WorkRequest) tblRequest.getValueAt(selectedRow, 0);
                for (WorkRequest wr : district.getWorkQueue().getWorkRequestList()) {
                    if (wr.getSender().equals(workRequest.getSender())) {
                        district.getWorkQueue().deleteWorkRequest(workRequest);
                    }
                }

                populateRequest();
            }

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cbxArea;
    private javax.swing.JComboBox<String> cbxItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRequest;
    private javax.swing.JTextField txtAmount;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Purchase;

import Business.Area.Area;
import Business.Area.AreaDirectory;
import Business.District.District;
import Business.MaterialList.Item;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jiahuanli
 */
public class PurchaseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PurchaseJPanel
     */
    JPanel purchaseContainer;
    District district;
    UserAccount useraccount;

    PurchaseJPanel(JPanel purchaseContainer, District district) {
        initComponents();
        this.purchaseContainer = purchaseContainer;
        this.district = district;// ***transfer the purchase's district into this jpanel
        district.setMoney((double) Math.round(district.getMoney() * 100) / 100);
        lblMoney.setText(String.valueOf(district.getMoney()));
        populateRequestlist();
    }

    public void populateRequestlist() {
        DefaultTableModel dtm = (DefaultTableModel) tblList.getModel();
        dtm.setRowCount(0);

        for (Area area : district.getAreaDirectory().getAreaList()) {
            for (WorkRequest workrequest : area.getWorkQueue().getWorkRequestList()) {
                Object row[] = new Object[4];
                row[0] = workrequest;
                row[1] = workrequest.getId();
                row[2] = workrequest.getItem().getQuantity();
                for (Item item : district.getItemDirectory().getItemList()) {
                    if (item.getName().equals(workrequest.getItem().getName())) {
                        row[3] = item.getQuantity();// show the totalamount of item in this district
                    }
                }
                dtm.addRow(row);
            }
        }
    }

    public Area searchArea() {
        int selectedrow = tblList.getSelectedRow();
        WorkRequest w = (WorkRequest) tblList.getValueAt(selectedrow, 0);
        for (Area area : district.getAreaDirectory().getAreaList()) {
            for (UserAccount ua : area.getUserAccountDirectory().getUserAccountList()) {
                if (w.getSender().getUsername().equals(ua.getUsername())) {
                    System.out.println(w.getSender().getUsername());
                    System.out.println(w.getSender().getRole().getClass().getTypeName());
                    return area;
                }
            }
        }

        return null;

    }

    public double distance() {
        double distance = searchArea().getLocation_x() * searchArea().getLocation_x() + searchArea().getLocation_y() * searchArea().getLocation_y();
        double n = Math.sqrt(distance);
        return n;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblList = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTotalcost = new javax.swing.JTextField();
        btnBuy = new javax.swing.JButton();
        lblMoney = new javax.swing.JLabel();
        txtTransportcost = new javax.swing.JTextField();
        btnRequest = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel1.setText("Purchase");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Request List");

        tblList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ID", "RequestAmount", "DistrictAmount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblList);
        if (tblList.getColumnModel().getColumnCount() > 0) {
            tblList.getColumnModel().getColumn(0).setResizable(false);
            tblList.getColumnModel().getColumn(1).setResizable(false);
            tblList.getColumnModel().getColumn(2).setResizable(false);
            tblList.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel3.setText("Money");

        jLabel5.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel5.setText("Transport Cost");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel6.setText("Make an order");

        jLabel7.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel7.setText("Total Cost");

        btnBuy.setBackground(new java.awt.Color(255, 255, 255));
        btnBuy.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        btnBuy.setText("Buy");
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyActionPerformed(evt);
            }
        });

        lblMoney.setBackground(new java.awt.Color(255, 255, 255));
        lblMoney.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        lblMoney.setText("jLabel4");

        btnRequest.setBackground(new java.awt.Color(255, 255, 255));
        btnRequest.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        btnRequest.setText("Request>>");
        btnRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(btnBuy)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtTotalcost)
                        .addComponent(txtTransportcost, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnRequest))
                .addGap(65, 65, 65))
            .addGroup(layout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(103, 103, 103)
                        .addComponent(jLabel3)
                        .addGap(36, 36, 36)
                        .addComponent(lblMoney))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(lblMoney))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTransportcost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtTotalcost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRequest)
                    .addComponent(btnBuy))
                .addGap(19, 19, 19))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyActionPerformed
        int selectedrow = tblList.getSelectedRow();
        if (selectedrow >= 0) {

            WorkRequest w = (WorkRequest) tblList.getValueAt(selectedrow, 0);

            for (Item item : district.getItemDirectory().getItemList()) {
                if (item.getName().equals(w.getItem().getName())) {
                    if (w.getItem().getQuantity() > item.getQuantity()) {// area's iventory+,money-,district's iventory not change
                        for (Item i : searchArea().getItemDirectory().getItemList()) {
                            System.out.println(searchArea().getName());
                            if (i.getName().equals(w.getItem().getName())) {
                                System.out.println(i.getQuantity());
                                i.setQuantity(i.getQuantity() + w.getItem().getQuantity());
                            }
                            System.out.println(i.getQuantity());
                        }

                        district.setMoney((district.getMoney() - distance() * 500));
                        txtTransportcost.setText(String.valueOf(distance() * 500));
                        txtTotalcost.setText(String.valueOf(distance() * 500 + w.getItem().getQuantity() * w.getItem().getPrice()));

                        for (Area area : district.getAreaDirectory().getAreaList()) {
                            for (WorkRequest workrequest : area.getWorkQueue().getWorkRequestList()) {
                                if (workrequest.equals(w)) {
                                    area.getWorkQueue().deleteWorkRequest(w);
                                    break;
                                }
                            }
                            break;
                        }

                        JOptionPane.showMessageDialog(null, "successfully!");

                    } else//district's invetory-,area's iventory+,money not change
                    {
                        for (Item i : searchArea().getItemDirectory().getItemList()) {
                            if (i.getName().equals(w.getItem().getName())) {
                                i.setQuantity(i.getQuantity() + w.getItem().getQuantity());
                            }
                        }
                        item.setQuantity(item.getQuantity() - w.getItem().getQuantity());
                        txtTransportcost.setText(String.valueOf(distance() * 500));
                        txtTotalcost.setText(String.valueOf(distance() * 500));

                        for (Area area : district.getAreaDirectory().getAreaList()) {
                            for (WorkRequest workrequest : area.getWorkQueue().getWorkRequestList()) {
                                if (workrequest.equals(w)) {
                                    area.getWorkQueue().deleteWorkRequest(w);
                                    break;
                                }
                            }
                            break;
                        }

                        JOptionPane.showMessageDialog(null, "successfully!");
                    }
                }
            }
            populateRequestlist();
            district.setMoney((double) Math.round(district.getMoney() * 100) / 100);
            lblMoney.setText(String.valueOf(district.getMoney()));
        } else {
            JOptionPane.showMessageDialog(null, "please select any row");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuyActionPerformed

    private void btnRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestActionPerformed
        RequestJPanel rjp = new RequestJPanel(purchaseContainer, district, useraccount);
        purchaseContainer.add("RequestJPanel", rjp);
        ((java.awt.CardLayout) purchaseContainer.getLayout()).next(purchaseContainer);

        // TODO add your handling code here:
    }//GEN-LAST:event_btnRequestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuy;
    private javax.swing.JButton btnRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMoney;
    private javax.swing.JTable tblList;
    private javax.swing.JTextField txtTotalcost;
    private javax.swing.JTextField txtTransportcost;
    // End of variables declaration//GEN-END:variables
}

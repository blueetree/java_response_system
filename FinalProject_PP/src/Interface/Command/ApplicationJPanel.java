/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Command;

import Business.Area.Area;
import Business.Area.AreaA;
import Business.Area.AreaB;
import Business.District.District;
import Business.EcoSystem;
import Business.Role.CommandRole;
import Business.Role.FrontLineRole;
import Business.Role.PurchaseRole;
import Business.Role.Role;
import Business.UserAccount.DonorAccount;
import Business.UserAccount.SpotAccount;
import Business.UserAccount.UserAccount;
import Business.UserAccount.UserAccount.AccountType;
import Business.UserAccount.UserAccountDirectory;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jiahuanli
 */
public class ApplicationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ApplicationJPanel
     */
    JPanel CommandContainer;
    District district;
    EcoSystem ecoSystem;
    Role role;
    UserAccount useraccount;

    ApplicationJPanel(JPanel CommandContainer, District district, UserAccount useraccount, EcoSystem ecoSystem) {
        initComponents();
        this.CommandContainer = CommandContainer;
        this.district = district;
        this.useraccount = useraccount;
        this.ecoSystem = ecoSystem;

        populateApplicationlist();
        populatecbx();
    }

    public void populatecbx() {
        cbxArea.removeAllItems();

        for (Area area : district.getAreaDirectory().getAreaList()) {
            cbxArea.addItem(String.valueOf(area));
        }
    }

    public void populateApplicationlist() {
        DefaultTableModel dtm = (DefaultTableModel) tblApplicationlist.getModel();
        dtm.setRowCount(0);
        for (UserAccount ua : ecoSystem.getUserAccountDirectory().getUserAccountList()) {
            System.out.println(ua.getClass().getTypeName());
            if (ua.getClass().getTypeName().equals("Business.UserAccount.DonorAccount")) {

                DonorAccount da = (DonorAccount) ua;

                if (da.isApply()) {
                    Object row[] = new Object[4];
                    row[0] = da;
                    row[1] = ua.getPerson().getName();
                    row[2] = da.getOccupation();
                    row[3] = da.getApplyWork();
                    dtm.addRow(row);

//                }
                }

            }
        }
    }

    public void deleteCount() {
        for (WorkRequest wr : useraccount.getWorkQueue().getWorkRequestList()) {
            if (wr.getSender().equals(useraccount)) {
                if (wr.getCommandQuantity() != 0) {
                    wr.setCommandQuantity(wr.getCommandQuantity() - 1);
                }
            } else if (wr.getFrontLineQuantity() != 0) {
                wr.setFrontLineQuantity(wr.getFrontLineQuantity() - 1);
            } else if (wr.getPurchaseQuantity() != 0) {
                wr.setPurchaseQuantity(wr.getPurchaseQuantity() - 1);
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblApplicationlist = new javax.swing.JTable();
        btnSubmit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        cbxRole = new javax.swing.JComboBox<>();
        cbxArea = new javax.swing.JComboBox<>();
        cbxApprove = new javax.swing.JComboBox<>();
        txtQuantity = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        tblApplicationlist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserName", "Name", "Occupation", "Apply Occupation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblApplicationlist);
        if (tblApplicationlist.getColumnModel().getColumnCount() > 0) {
            tblApplicationlist.getColumnModel().getColumn(0).setResizable(false);
            tblApplicationlist.getColumnModel().getColumn(1).setResizable(false);
            tblApplicationlist.getColumnModel().getColumn(2).setResizable(false);
            tblApplicationlist.getColumnModel().getColumn(3).setResizable(false);
        }

        btnSubmit.setBackground(new java.awt.Color(255, 255, 255));
        btnSubmit.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel2.setText("Needing List");

        btnCreate.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        cbxRole.setBackground(new java.awt.Color(255, 255, 255));
        cbxRole.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        cbxRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Volunteer at front line", "Procurement staff", "Commanding officer" }));

        cbxArea.setBackground(new java.awt.Color(255, 255, 255));
        cbxArea.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cbxArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxAreaActionPerformed(evt);
            }
        });

        cbxApprove.setBackground(new java.awt.Color(255, 255, 255));
        cbxApprove.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        cbxApprove.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Approve", "Reject" }));
        cbxApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxApproveActionPerformed(evt);
            }
        });

        jLabel1.setText("Quantity:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(cbxApprove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSubmit)
                .addGap(29, 29, 29))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(cbxRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(cbxArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxApprove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(26, 26, 26)
                .addComponent(btnCreate)
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        int selectedrow = tblApplicationlist.getSelectedRow();
        if (selectedrow >= 0) {

            DonorAccount ua = (DonorAccount) tblApplicationlist.getValueAt(selectedrow, 0);
//            if (a.getClass().getTypeName().equals("Business.UserAccount.DonorAccount")){
//                DonorAccount ua = (DonorAccount) a;

            if (cbxApprove.getSelectedItem().equals("Approve")) {
                //add a new useraccount in area,change the apply into false 
                for (Area area : district.getAreaDirectory().getAreaList()) {
                    if (cbxArea.getSelectedItem().equals(area.getName())) {
                        if (ua.getApplyWork().equals("FrontLine")) {
                            role = new FrontLineRole();
                            area.getUserAccountDirectory().createUserAccount(ua.getApplyUserName(), ua.getApplyPassword(), ua.getPerson(), role, AccountType.Spot);
                            ua.setApply(false);
                            deleteCount();
                            populateApplicationlist();
                        } else if (ua.getApplyWork().equals("Purchase")) {
                            role = new PurchaseRole();
                            area.getUserAccountDirectory().createUserAccount(ua.getApplyUserName(), ua.getApplyPassword(), ua.getPerson(), role, AccountType.Spot);
                            ua.setApply(false);
                            deleteCount();
                            populateApplicationlist();
                        } else if (ua.getApplyWork().equals("Command")) {
                            role = new CommandRole();
                            area.getUserAccountDirectory().createUserAccount(ua.getApplyUserName(), ua.getApplyPassword(), ua.getPerson(), role, AccountType.Spot);
                            ua.setApply(false);
                            deleteCount();
                            populateApplicationlist();
                        }

                    }
                }

            }
            if (cbxApprove.getSelectedItem().equals("Reject")) {

                ua.setApply(false);
                populateApplicationlist();
            }
            JOptionPane.showMessageDialog(null, "successfully!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "please select any row");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void cbxApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxApproveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxApproveActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        WorkRequest workRequest = new WorkRequest();
        workRequest.setSender(useraccount);

        if (cbxRole.getSelectedItem().equals("Volunteer at front line")) {
            workRequest.setFrontLineQuantity(Integer.parseInt(txtQuantity.getText()));
        }

        if (cbxRole.getSelectedItem().equals("Procurement staff")) {
            workRequest.setFrontLineQuantity(Integer.parseInt(txtQuantity.getText()));
        }

        if (cbxRole.getSelectedItem().equals("Commanding officer")) {
            workRequest.setFrontLineQuantity(Integer.parseInt(txtQuantity.getText()));
        }

        district.getWorkQueue().getWorkRequestList().add(workRequest);
        JOptionPane.showMessageDialog(null, "successfully!", "Warning", JOptionPane.WARNING_MESSAGE);

        // TODO add your handling code here:
    }//GEN-LAST:event_btnCreateActionPerformed

    private void cbxAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxAreaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxAreaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cbxApprove;
    private javax.swing.JComboBox<String> cbxArea;
    private javax.swing.JComboBox<String> cbxRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblApplicationlist;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}

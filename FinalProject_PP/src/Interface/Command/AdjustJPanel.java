/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Command;

import Business.Area.Area;
import Business.District.District;
import Business.MaterialList.Item;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jiahuanli
 */
public class AdjustJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdjustJPanel
     */
    JPanel CommandContainer;
    District district;

    AdjustJPanel(JPanel CommandContainer, District district) {
        initComponents();
        this.CommandContainer = CommandContainer;
        this.district = district;
        populatecbx1();
        populatecbx2();
    }

    public void populatecbx1() {
        cbxArea1.removeAllItems();

        for (Area area : district.getAreaDirectory().getAreaList()) {
            cbxArea1.addItem(String.valueOf(area));
        }
    }

    public void populatecbx2() {
        cbxArea2.removeAllItems();

        for (Area area : district.getAreaDirectory().getAreaList()) {
            cbxArea2.addItem(String.valueOf(area));
        }
    }

    public void populateMaterial1() {
        DefaultTableModel dtm = (DefaultTableModel) tblMaterial1.getModel();
        dtm.setRowCount(0);
        for (Area area : district.getAreaDirectory().getAreaList()) {
            if (cbxArea1.getSelectedItem().equals(area.getName())) {
                for (Item item : area.getItemDirectory().getItemList()) {
                    Object row[] = new Object[2];
                    row[0] = item;
                    row[1] = item.getQuantity();
                    dtm.addRow(row);
                }
            }
        }
    }

    public void populateMaterial2() {
        DefaultTableModel dtm = (DefaultTableModel) tblMaterial2.getModel();
        dtm.setRowCount(0);
        for (Area area : district.getAreaDirectory().getAreaList()) {
            if (cbxArea2.getSelectedItem().equals(area.getName())) {
                for (Item item : area.getItemDirectory().getItemList()) {
                    Object row[] = new Object[2];
                    row[0] = item;
                    row[1] = item.getQuantity();
                    dtm.addRow(row);
                }
            }
        }
    }

    public void populateFrontline1() {
        DefaultTableModel dtm = (DefaultTableModel) tblFrontline1.getModel();
        dtm.setRowCount(0);
        for (Area area : district.getAreaDirectory().getAreaList()) {
            if (cbxArea1.getSelectedItem().equals(area.getName())) {
                for (UserAccount ua : area.getUserAccountDirectory().getUserAccountList()) {
                    if (ua.getRole().getClass().getTypeName().equals("Business.Role.FrontLineRole")) {
                        Object row[] = new Object[1];
                        row[0] = ua.getPerson();
                        dtm.addRow(row);

                    }
                }
            }
        }
    }

    public void populateFrontline2() {
        DefaultTableModel dtm = (DefaultTableModel) tblFrontline2.getModel();
        dtm.setRowCount(0);
        for (Area area : district.getAreaDirectory().getAreaList()) {
            if (cbxArea2.getSelectedItem().equals(area.getName())) {
                for (UserAccount ua : area.getUserAccountDirectory().getUserAccountList()) {
                    if (ua.getRole().getClass().getTypeName().equals("Business.Role.FrontLineRole")) {
                        Object row[] = new Object[1];
                        row[0] = ua.getPerson();
                        dtm.addRow(row);

                    }
                }
            }
        }
    }

    public double distance(Area a, Area b) {
        double distance = (a.getLocation_x() - b.getLocation_x()) * (a.getLocation_x() - b.getLocation_x()) + (a.getLocation_y() - b.getLocation_y()) * (a.getLocation_y() - b.getLocation_y());
        double n = Math.sqrt(distance);
        return n;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMaterial1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cbxArea1 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFrontline2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbxArea2 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnTransferM = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        btnTransferF = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtCost = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblFrontline1 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblMaterial2 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblMaterial1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMaterial1);
        if (tblMaterial1.getColumnModel().getColumnCount() > 0) {
            tblMaterial1.getColumnModel().getColumn(0).setResizable(false);
            tblMaterial1.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel2.setText("Disaster area");

        cbxArea1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxArea1ActionPerformed(evt);
            }
        });

        tblFrontline2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblFrontline2);
        if (tblFrontline2.getColumnModel().getColumnCount() > 0) {
            tblFrontline2.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel3.setText("Material");

        jLabel4.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel4.setText("Frontline");

        jLabel5.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel5.setText("Disaster area");

        cbxArea2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxArea2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel6.setText("Material");

        jLabel7.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel7.setText("Frontline");

        btnTransferM.setBackground(new java.awt.Color(255, 255, 255));
        btnTransferM.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        btnTransferM.setText("Transfer");
        btnTransferM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransferMActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel8.setText("Amount");

        btnTransferF.setBackground(new java.awt.Color(255, 255, 255));
        btnTransferF.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        btnTransferF.setText("Transfer");
        btnTransferF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransferFActionPerformed(evt);
            }
        });

        jLabel9.setText("Cost");

        tblFrontline1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblFrontline1);
        if (tblFrontline1.getColumnModel().getColumnCount() > 0) {
            tblFrontline1.getColumnModel().getColumn(0).setResizable(false);
        }

        tblMaterial2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblMaterial2);
        if (tblMaterial2.getColumnModel().getColumnCount() > 0) {
            tblMaterial2.getColumnModel().getColumn(0).setResizable(false);
            tblMaterial2.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel10.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel10.setText("From");

        jLabel11.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel11.setText("To");

        btnSubmit.setBackground(new java.awt.Color(255, 255, 255));
        btnSubmit.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(307, 307, 307)
                                .addComponent(jLabel11))
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(cbxArea1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4))
                                        .addGap(154, 154, 154))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnTransferF)
                                        .addGap(29, 29, 29)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbxArea2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel9)
                                    .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 36, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel8)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnTransferM)
                                .addGap(241, 241, 241)
                                .addComponent(btnSubmit)))
                        .addGap(25, 25, 25))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(cbxArea2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(cbxArea1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSubmit))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTransferM)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnTransferF)
                        .addGap(58, 58, 58))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbxArea1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxArea1ActionPerformed
        populateMaterial1();
        populateFrontline1();

        // TODO add your handling code here:
    }//GEN-LAST:event_cbxArea1ActionPerformed

    private void cbxArea2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxArea2ActionPerformed
        populateMaterial2();
        populateFrontline2();

        // TODO add your handling code here:
    }//GEN-LAST:event_cbxArea2ActionPerformed

    private void btnTransferMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransferMActionPerformed
        int selectedRow = tblMaterial1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first", "Warning", JOptionPane.WARNING_MESSAGE);

        } else {
            Item item = (Item) tblMaterial1.getValueAt(selectedRow, 0);
            if (Integer.parseInt(txtAmount.getText()) <= item.getQuantity()) {
                for (Area a : district.getAreaDirectory().getAreaList()) {    //find the area a
                    if (cbxArea1.getSelectedItem().equals(a.getName())) {
                        for (Area b : district.getAreaDirectory().getAreaList()) {   //find the area b
                            if (cbxArea2.getSelectedItem().equals(b.getName())) {
                                txtCost.setText(String.valueOf(distance(a, b) * 5));
                                
                            }
                            
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "there is no enough quantity!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTransferMActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        int selectedRow = tblMaterial1.getSelectedRow(); //the item quantity of area a -
        Item item1 = (Item) tblMaterial1.getValueAt(selectedRow, 0);
      

        for (Area b : district.getAreaDirectory().getAreaList()) {   //find the area b
            if (cbxArea2.getSelectedItem().equals(b.getName())) {
                for (Item item2 : b.getItemDirectory().getItemList()) {
                    if (item2.getName().equals(item1.getName())) {/////////////If nor exist?
                        item2.setQuantity(item2.getQuantity() + Integer.parseInt(txtAmount.getText()));
                    }
                }
            }
        }
          item1.setQuantity(item1.getQuantity() - Integer.parseInt(txtAmount.getText()));
//        district.setMoney((district.getMoney() - Double.valueOf(txtCost.getText())));//the district's money-

        populateMaterial1();
        populateMaterial2();
        JOptionPane.showMessageDialog(null, "Transfer successfully!", "Warning", JOptionPane.WARNING_MESSAGE);

        // TODO add your handling code here:
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnTransferFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransferFActionPerformed
        int selectedRow = tblFrontline1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first", "Warning", JOptionPane.WARNING_MESSAGE);

        } else {
            Person person1 = (Person) tblFrontline1.getValueAt(selectedRow, 0);
            for (Area a1 : district.getAreaDirectory().getAreaList()) {
                if (cbxArea1.getSelectedItem().equals(a1.getName())) {
                    for (UserAccount ua : a1.getUserAccountDirectory().getUserAccountList()) {
                        if (person1.getName().equals(ua.getPerson().getName())) {
                            /// create new person and new account in area b

                            for (Area a2 : district.getAreaDirectory().getAreaList()) {
                                if (cbxArea2.getSelectedItem().equals(a2.getName())) {
                                    a2.getPersonDirectory().createPerson(person1.getName());
                                    a2.getUserAccountDirectory().createUserAccount(ua.getUsername(), ua.getPassword(), ua.getPerson(), ua.getRole(), UserAccount.AccountType.Spot);
                                }
                            }
                            // delete the person and account in area a

                        }
                        a1.getUserAccountDirectory().deleteUserAccount(ua);
                        break;
                    }
                   

                }
                 a1.getPersonDirectory().deletePerson(person1);
                 break;
            }

            JOptionPane.showMessageDialog(null, "Transfer successfully!", "Warning", JOptionPane.WARNING_MESSAGE);
            populateFrontline1();
            populateFrontline2();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnTransferFActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnTransferF;
    private javax.swing.JButton btnTransferM;
    private javax.swing.JComboBox<String> cbxArea1;
    private javax.swing.JComboBox<String> cbxArea2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable tblFrontline1;
    private javax.swing.JTable tblFrontline2;
    private javax.swing.JTable tblMaterial1;
    private javax.swing.JTable tblMaterial2;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtCost;
    // End of variables declaration//GEN-END:variables
}

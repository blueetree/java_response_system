/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Command;

import Business.Area.Area;
import Business.District.District;
import Business.MaterialList.Item;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.Font;
import java.text.DecimalFormat;
import java.text.NumberFormat;

import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author fengyiqian
 */
public class AnalyseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AnalyseJPanel
     */
    JPanel CommandContainer;
    District district;



    public AnalyseJPanel(JPanel CommandContainer, District district) {
        initComponents();
        this.CommandContainer = CommandContainer;
        this.district = district;

        populateTableDistrictA();
        populateCbxItem();

        populateTableItem();
        money.setText(String.valueOf(district.getMoney()));

    }

    public void populateTableDistrictA() {
        DefaultTableModel dtm = (DefaultTableModel) tblDistrictA.getModel();
        dtm.setRowCount(0);

        for (Area area : district.getAreaDirectory().getAreaList()) {
            Object row[] = new Object[3];
            row[0] = area.getName();
            double demand = 0.0;
            for (WorkRequest workRequest : area.getWorkQueue().getWorkRequestList()) {
                if (demand == 0.0) {
                    if (workRequest.getMoney() != null) {
                        demand += workRequest.getMoney();
                    } else {
                        demand += workRequest.getItem().getPrice() * workRequest.getItem().getQuantity();
                    }
                } else if (demand != 0.0) {
                    if (workRequest.getMoney() != null) {
                        demand += workRequest.getMoney();
                    } else {
                        demand += workRequest.getItem().getPrice() * workRequest.getItem().getQuantity();
                    }
                }

            }
            row[1] = demand;
            dtm.addRow(row);
        }
    }

    public void populateCbxItem() {
        cbxItem.removeAllItems();
        for (Item item : district.getItemDirectory().getItemList()) {
            cbxItem.addItem(item);
        }
    }

    public void populateTableItem() {
        DefaultTableModel dtm = (DefaultTableModel) tblItem.getModel();
        dtm.setRowCount(0);
        Item selectedItem = (Item) cbxItem.getSelectedItem();
        for (Area area : district.getAreaDirectory().getAreaList()) {
            Object row[] = new Object[2];
            row[0] = area.getName();
            int quantity = 0;

            for (WorkRequest workRequest : area.getWorkQueue().getWorkRequestList()) {
                if (quantity == 0) {
                    if (workRequest.getItem() != null) {
                        if (workRequest.getItem().getName().equals(selectedItem.getName())) {
                            quantity += workRequest.getItem().getQuantity();
                        }
                    }
                } else if (quantity != 0) {
                    if (workRequest.getItem() != null) {
                        if (workRequest.getItem().getName().equals(selectedItem.getName())) {
                            quantity += workRequest.getItem().getQuantity();
                        }
                    }
                }
            }
            row[1] = quantity;
            dtm.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBarChart = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDistrictA = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblItem = new javax.swing.JTable();
        btnBarChart1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbxItem = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        money = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        btnBarChart.setText("Refresh");
        btnBarChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBarChartActionPerformed(evt);
            }
        });

        tblDistrictA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Area", "Total Value of Demand"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDistrictA);
        if (tblDistrictA.getColumnModel().getColumnCount() > 0) {
            tblDistrictA.getColumnModel().getColumn(0).setResizable(false);
            tblDistrictA.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel1.setText("Total Value of Areas' Demand: ");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel2.setText("Demand Analysis");

        tblItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Area", "Quantity of Deman"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblItem);
        if (tblItem.getColumnModel().getColumnCount() > 0) {
            tblItem.getColumnModel().getColumn(0).setResizable(false);
            tblItem.getColumnModel().getColumn(1).setResizable(false);
        }

        btnBarChart1.setText("Refresh");
        btnBarChart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBarChart1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel3.setText("Item Demand Analysis: ");

        jLabel4.setText("Item:");

        cbxItem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxItemActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel5.setText("Available Fund in District");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(346, 346, 346)
                        .addComponent(btnBarChart1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(296, 296, 296)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 190, Short.MAX_VALUE)
                                .addComponent(jLabel5)))))
                .addGap(42, 42, 42)
                .addComponent(money)
                .addGap(95, 95, 95))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBarChart)
                        .addGap(326, 326, 326))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbxItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(124, 124, 124))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(money))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBarChart)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBarChart1)
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBarChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarChartActionPerformed
        populateTableDistrictA();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBarChartActionPerformed

    private void btnBarChart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarChart1ActionPerformed
        populateTableItem();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBarChart1ActionPerformed

    private void cbxItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxItemActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_cbxItemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBarChart;
    private javax.swing.JButton btnBarChart1;
    private javax.swing.JComboBox cbxItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel money;
    private javax.swing.JTable tblDistrictA;
    private javax.swing.JTable tblItem;
    // End of variables declaration//GEN-END:variables
}

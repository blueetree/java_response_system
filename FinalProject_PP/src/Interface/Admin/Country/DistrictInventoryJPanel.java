/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Admin.Country;

import Interface.Command.*;
import Business.Area.Area;
import Business.Country.Country;
import Business.District.District;
import Business.MaterialList.Item;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.WARNING_MESSAGE;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jiahuanli
 */
public class DistrictInventoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdjustJPanel
     */
    JPanel CommandContainer;
    Country country;

    DistrictInventoryJPanel(JPanel CommandContainer, Country country) {
        initComponents();
        this.CommandContainer = CommandContainer;
        this.country = country;
        populatecbx1();
    }

    public void populatecbx1() {
        cbxArea1.removeAllItems();

        for (District district : country.getDistrictDirectory().getDistrictList()) {
            cbxArea1.addItem(district);
        }
        cbxArea1.addItem("Country Inventory");
    }


    public void populateMaterial1() {
        System.out.println("inside populateMaterial1");
        DefaultTableModel dtm = (DefaultTableModel) tblMaterial1.getModel();
        dtm.setRowCount(0);
        if(cbxArea1.getSelectedItem().equals("Country Inventory")){
            System.out.println("District Inventory loop");
                for (Item item : country.getItemDirectory().getItemList()) {
                    Object row[] = new Object[2];
                    row[0] = item;
                    row[1] = item.getQuantity();
                    dtm.addRow(row);
                }
         }else{
        for (District district : country.getDistrictDirectory().getDistrictList()) {
            if (cbxArea1.getSelectedItem().equals(district)) {
                for (Item item : district.getItemDirectory().getItemList()) {
                    Object row[] = new Object[2];
                    row[0] = item;
                    row[1] = item.getQuantity();
                    dtm.addRow(row);
                }
            }
        }
        }
    }





    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMaterial1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cbxArea1 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblMaterial1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMaterial1);
        if (tblMaterial1.getColumnModel().getColumnCount() > 0) {
            tblMaterial1.getColumnModel().getColumn(0).setResizable(false);
            tblMaterial1.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jLabel2.setText("District");

        cbxArea1.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        cbxArea1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxArea1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Lucida Sans", 0, 13)); // NOI18N
        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(71, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(jButton2)))
                .addGap(0, 80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxArea1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(107, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbxArea1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxArea1ActionPerformed
        System.out.println("inside cbxArea1ActionPerformed");
        populateMaterial1();

        // TODO add your handling code here:
    }//GEN-LAST:event_cbxArea1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblMaterial1.getSelectedRow();
            District district = (District)cbxArea1.getSelectedItem();
        if (selectedrow >= 0) {
            Item e = (Item) tblMaterial1.getValueAt(selectedrow, 0);
            district.getItemDirectory().getItemList().remove(e);
            JOptionPane.showMessageDialog(null, "Complete!");
            populateMaterial1();
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning", WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbxArea1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMaterial1;
    // End of variables declaration//GEN-END:variables
}
